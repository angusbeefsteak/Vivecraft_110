--- a/net/minecraft/client/gui/GuiOverlayDebug.java
+++ b/net/minecraft/client/gui/GuiOverlayDebug.java
@@ -26,6 +26,7 @@
 import net.minecraft.world.WorldType;
 import net.minecraft.world.chunk.Chunk;
 import org.lwjgl.opengl.Display;
+import org.lwjgl.util.vector.Matrix4f;
 
 public class GuiOverlayDebug extends Gui
 {
@@ -177,6 +178,24 @@
                 list.add(String.format("Looking at: %d %d %d", new Object[] {Integer.valueOf(blockpos1.getX()), Integer.valueOf(blockpos1.getY()), Integer.valueOf(blockpos1.getZ())}));
             }
 
+//            list.add("c0 tm " + MCOpenVR.controllerHistory[0].averageSpeed(0.25));
+//            list.add("c1 tm " + MCOpenVR.controllerHistory[1].averageSpeed(0.25));
+//            list.add("mspd " + Minecraft.getMinecraft().runTracker.getSpeed());
+
+//	   			FloatBuffer buffer = mc.vrPlayer.getHMDMatrix_World();
+//	   			buffer.rewind();
+//	   			Matrix4f matrix = new Matrix4f();
+//	   			matrix.load(buffer);
+//                Quaternion headRotation = new Quaternion(matrix);
+//                list.add("HMD QUAT " + headRotation.toString());         
+//			    Vector3 forward = new Vector3(0,0,-1);
+//				Quaternion q = new Quaternion(headRotation.w, headRotation.x, headRotation.y, headRotation.z);
+//				Vector3 out = q.multiply(forward);
+//                list.add("HMD DIR " + Minecraft.getMinecraft().vrPlayer.getHMDDir_World().toString());
+//				list.add("HMD DIR2 " + out.toString());
+//            list.add("mspd " + PlayerModelController.getInstance().getRotationsForPlayer(Minecraft.getMinecraft().thePlayer.getUniqueID()).rightArm.toString());
+//            
+
             return list;
         }
     }
@@ -191,7 +210,7 @@
 
         if (Reflector.FMLCommonHandler_getBrandings.exists())
         {
-            Object object = Reflector.call(Reflector.FMLCommonHandler_instance, new Object[0]);
+            Object object = Reflector.call(Reflector.FMLCommonHandler_instance);
             list.add("");
             list.addAll((Collection)Reflector.call(object, Reflector.FMLCommonHandler_getBrandings, new Object[] {Boolean.valueOf(false)}));
         }
@@ -238,7 +257,7 @@
         }
     }
 
-    private void renderLagometer()
+    public void renderLagometer()
     {
         GlStateManager.disableDepth();
         FrameTimer frametimer = this.mc.getFrameTimer();
